<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>employee-management</artifactId>
	<packaging>jar</packaging>
	<version>${revision}</version>
	<name>employee-management</name>
	<url>http://maven.apache.org</url>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
	</parent>

	<properties>
		<appname>employee-management</appname>
		<lib.directory>lib</lib.directory>
		<java-version>1.8</java-version>
		<springframework.version>4.3.0.RELEASE</springframework.version>
		<hibernate.version>4.3.10.Final</hibernate.version>
		<mysql.connector.version>5.1.31</mysql.connector.version>
		<camelVersion>2.16.2</camelVersion>
		<appjar>${appname}.jar</appjar>
		<servicename>${appname}-service</servicename>
		<!--<rpm.install.basedir>/opt/agora/${appname}</rpm.install.basedir>-->
	</properties>

	<dependencies>
		<!-- Spring boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId> org.springframework.boot </groupId>
			<artifactId>spring-boot-starter-data-jpa </artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.pojomatic</groupId>
			<artifactId>pojomatic</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- Jboss logging -->
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.isrsal</groupId>
			<artifactId>spring-mvc-logger</artifactId>
			<version>0.2</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Joda -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<!-- Cron4j -->
		<dependency>
			<groupId>it.sauronsoftware.cron4j</groupId>
			<artifactId>cron4j</artifactId>
			<version>2.2.5</version>
		</dependency>
		<!-- Dozer -->
		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
			<version>5.4.0</version>
		</dependency>
		<!-- Extsh -->
		<dependency>
			<groupId>ch.ralscha</groupId>
			<artifactId>extdirectspring</artifactId>
			<version>1.0.12</version>
		</dependency>
		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- JAX-B -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- Swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.4.0</version>
		</dependency>
		<!-- Junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.surefire</groupId>
			<artifactId>surefire</artifactId>
			<version>2.16</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.8.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.9.0</version>
		</dependency>
		<!-- Quartz Job -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
            <groupId>org.owasp.antisamy</groupId>
            <artifactId>antisamy</artifactId>
            <version>1.5.3</version>
        </dependency>		
	</dependencies>
	<build>
		<finalName>employee-management</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<groupId>com.emp</groupId>
	
	<profiles>
		<profile>
			<id>build-rpm</id>
			<properties>
				<rpm.install.dir>/opt/agora/${project.artifactId}</rpm.install.dir>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
						<version>2.1-alpha-4</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>generate-rpm</id>
								<goals>
									<goal>rpm</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<name>${project.artifactId}</name>
							<targetOS>linux</targetOS>
							<copyright>2017, Altisource</copyright>
							<distribution>Agora</distribution>
							<group>Application/Internet</group>
							<repackJars>false</repackJars>
							<defaultFilemode>755</defaultFilemode>
							<defaultUsername>agora</defaultUsername>
							<defaultGroupname>agora</defaultGroupname>
							<mappings>
								<mapping>
									<directory>${rpm.install.basedir}</directory>
									<filemode>500</filemode>
									<username>agora</username>
									<groupname>agora</groupname>
									<sources>
										<source>
											<location>target/${appjar}</location>
										</source>
									</sources>
								</mapping>							
								<mapping>
									<filemode>500</filemode>
									<username>agora</username>
									<groupname>agora</groupname>
									<directory>/opt/tomcat/logs/employee-management</directory>
								</mapping>								
							</mappings>
							<preinstallScriptlet>
								<script><![CDATA[
			getent group agora > /dev/null || groupadd -r agora
			getent passwd agora > /dev/null || useradd -r -g agora agora
								]]></script>
							</preinstallScriptlet>
							<postinstallScriptlet>
								<script><![CDATA[
		if [[ ! -s /etc/init.d/${appname} ]]; then
		   ln -s ${rpm.install.basedir}/${appjar} /etc/init.d/${appname}
		   /sbin/chkconfig --add ${appname}
		fi
								]]></script>
							</postinstallScriptlet>							
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>		
	</profiles>
</project>